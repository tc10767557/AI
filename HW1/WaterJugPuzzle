{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyM5nJgDi31MOnzXuJNX2xPj",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/tc10767557/AI/blob/main/HW1/WaterJugPuzzle\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Teagan Clark\n",
        "\n",
        "Artificial Intelligence\n",
        "\n",
        "Dr. Forouraghi\n",
        "\n",
        "12 September 2025"
      ],
      "metadata": {
        "id": "RWZUYjxK9DlY"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Assignment 1"
      ],
      "metadata": {
        "id": "3Gt0W50a9jnU"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "mQgZ_jvm9ClT"
      },
      "outputs": [],
      "source": [
        "class WaterJugPuzzle():\n",
        "\n",
        "  # define states\n",
        "    def __init__(self):\n",
        "        # start states\n",
        "        self.jug5 = 0\n",
        "        self.jug3 = 0\n",
        "        # \"full\" states\n",
        "        self.capacity5 = 5\n",
        "        self.capacity3 = 3\n",
        "\n",
        "    # save/undo states\n",
        "    def save_state(self):\n",
        "        self._jug5 = self.jug5\n",
        "        self._jug3 = self.jug3\n",
        "    def undo_state(self):\n",
        "        self.jug5 = self._jug5\n",
        "        self.jug3 = self._jug3\n",
        "\n",
        "    # fill jugs\n",
        "    def R1_fill5(self):\n",
        "        # fill the 5L jug completely\n",
        "        self.save_state()\n",
        "        self.jug5 = self.capacity5\n",
        "    def R2_fill3(self):\n",
        "        # fill the 3L jug completely\n",
        "        self.save_state()\n",
        "        self.jug3 = self.capacity3\n",
        "\n",
        "    # empty jugs\n",
        "    def R3_empty5(self):\n",
        "        # empty the 5L jug\n",
        "        self.save_state()\n",
        "        self.jug5 = 0\n",
        "    def R4_empty3(self):\n",
        "        # empty the 3L jug\n",
        "        self.save_state()\n",
        "        self.jug3 = 0\n",
        "\n",
        "    # move from one jug to the other\n",
        "    def R5_pour5to3(self):\n",
        "        # pour water from 5L jug into 3L jug\n",
        "        self.save_state()\n",
        "        transfer = min(self.jug5, self.capacity3 - self.jug3)\n",
        "        self.jug5 -= transfer\n",
        "        self.jug3 += transfer\n",
        "    def R6_pour3to5(self):\n",
        "        # pour water from 3L jug into 5L jug\n",
        "        self.save_state()\n",
        "        transfer = min(self.jug3, self.capacity5 - self.jug5)\n",
        "        self.jug3 -= transfer\n",
        "        self.jug5 += transfer\n",
        "\n",
        "    # print current state\n",
        "    def print_state(self):\n",
        "        print(f\"5L jug: {self.jug5}, 3L jug: {self.jug3}\")"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "wj = WaterJugPuzzle()\n",
        "\n",
        "wj.print_state()\n",
        "print(\"--------------------\")\n",
        "\n",
        "wj.R1_fill5()\n",
        "wj.print_state()\n",
        "\n",
        "print(\"--------------------\")\n",
        "wj.R5_pour5to3()\n",
        "wj.print_state()\n",
        "\n",
        "print(\"--------------------\")\n",
        "wj.R4_empty3()\n",
        "wj.print_state()\n",
        "\n",
        "print(\"--------------------\")\n",
        "wj.R5_pour5to3()\n",
        "wj.print_state()\n",
        "\n",
        "print(\"--------------------\")\n",
        "wj.R1_fill5()\n",
        "wj.print_state()\n",
        "\n",
        "print(\"--------------------\")\n",
        "wj.R5_pour5to3()\n",
        "wj.print_state()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "D6xxiP9u-67W",
        "outputId": "0ae6bc34-a892-4cef-b361-29d0d355f5cb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "5L jug: 0, 3L jug: 0\n",
            "--------------------\n",
            "5L jug: 5, 3L jug: 0\n",
            "--------------------\n",
            "5L jug: 2, 3L jug: 3\n",
            "--------------------\n",
            "5L jug: 2, 3L jug: 0\n",
            "--------------------\n",
            "5L jug: 0, 3L jug: 2\n",
            "--------------------\n",
            "5L jug: 5, 3L jug: 2\n",
            "--------------------\n",
            "5L jug: 4, 3L jug: 3\n"
          ]
        }
      ]
    }
  ]
}